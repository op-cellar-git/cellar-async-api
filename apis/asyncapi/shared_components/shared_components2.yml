components:
  messages:
     genericMessage:
       name: genericMessage
       payload:
          type: object
       traits:
          - $ref: "#/components/messageTraits/commonHeaders"
     responseBody:
       name: responseBody
       payload:
          type: object
       traits:
          - $ref: "#/components/messageTraits/commonHeaders"
     eurlexRequest:
       name: eurlexRequest
       payload:
         type: object
         properties:
            objectType:
              type: string
              description: the Eurlex service supports object notices, tree notices, and branch notices.
              enum:
                - 'object'
                - 'tree'
                - 'branch'
            decoding:
              type: string
              description: 3-chars ISO_639-3 language code specifying the decoding language.
            embargo:
              type: boolean
              description: the parameter defines whether the response should include embargoed data or not.
       traits:
          - $ref: "#/components/messageTraits/commonHeaders"          
     rdfRequest:
       name: rdfRequest
       payload:
         type: object
         properties:
            objectType:
              type: string
              description: type of resource requested.
              enum:
                - 'object'
                - 'tree'
                - 'branch'
            scope:
              type: string
              description: type of description requested.
              enum:
                - 'cbd'
                - 'scbd'
            inference:
              type: string
              description: type of inference requested.
              enum:
                - 'inferred'
                - 'noninferred'
            format:
              type: string
              description: type of exchange format requested.
              enum:
                - 'rdf'
                - 'jsonld'
                - 'ttl'
                - 'nt'
       traits:
          - $ref: "#/components/messageTraits/commonHeaders"
     rdfConceptRequest:
       name: rdfRequest
       payload:
         type: object
         properties:
            table:
              type: string
              description: name of the table, e.g., corporate-body, eurovoc, etc.
            conceptCode:
              type: string
              description: code from the table, e.g., COM, 42, etc.
            scope:
              type: string
              description: type of description requested.
              enum:
                - 'cbd'
                - 'scbd'
            inference:
              type: string
              description: type of inference requested.
              enum:
                - 'inferred'
                - 'noninferred'
            format:
              type: string
              description: type of exchange format requested.
              enum:
                - 'rdf'
                - 'jsonld'
                - 'ttl'
                - 'nt'
       traits:
          - $ref: "#/components/messageTraits/commonHeaders"
     ingestionBegin:
       name: ingestionBegin
       payload:
         type: object
         properties:
            database:
              type: string
              description: ID of the database to ingest.
              enum:
                - 'S3'
                - 'ES'
                - 'Virtuoso'
       traits:
          - $ref: "#/components/messageTraits/commonHeaders"
  messageTraits:
    commonHeaders:
      headers:
          type: object
          properties:
            sagaID:
              description: Correlation ID set by application
              type: string
            parentID:
              description: Unique identifier for a given instance of the publishing application
              type: string
            #join:
              #type: boolean
              #description: Flag to indicate whether to perform a join.
              #default: false 
